@use "sass:math";

/* Color VARs
========================================================= */
@import "color-vars";

/* Fonts (fonts defined in theme.json)
========================================================= */
@mixin font($style: "body") {
  @if ($style == "body") {
    font-family: var(--wp--preset--font-family--body);
  } @else if ($style == "heading") {
    font-family: var(--wp--preset--font-family--header);
  }
}

/* EM to PX
========================================================= */
$browser-context: 16; // Default
@function em($pixels, $context: $browser-context) {
  @return math.div($pixels, $context) * 1rem;
}

/* REM to PX
========================================================= */
@function rem($size) {
  @return math.div($size, 16) * 1rem;
}

/* BG Image
========================================================= */
@mixin bg($sizing: "cover", $position: "center", $repeat: "no-repeat") {
  background: {
    position: $position;
    repeat: $repeat;
    size: $sizing;
  }
}

/* Padding - Global Rows
========================================================= */
@mixin row-padding(
  $top-large: 120,
  $bottom-large: 120,
  $top-medium: 60,
  $bottom-medium: 60,
  $top-small: $top-medium,
  $bottom-small: $bottom-medium
) {
  @include for-size(tablet, up, offset) {
    padding-top: $top-large * 1px;
    padding-bottom: $bottom-large * 1px;
  }
  @include for-size(tablet) {
    padding-top: $top-medium * 1px;
    padding-bottom: $bottom-medium * 1px;
  }
  @include for-size(tablet-sm) {
    padding-top: $top-small * 1px;
    padding-bottom: $bottom-small * 1px;
  }
}

/* Global Transition ( property, duration, easing )
========================================================= */
@mixin trans($prop: "all", $dur: 600, $ease: cubic-bezier(0.23, 1, 0.32, 1)) {
  transition: $prop $dur + ms $ease;
}

/* Font Awesome 5 ( needs content specified )
========================================================= */
@mixin fa($type: "free", $weight: 900) {
  display: inline-block;
  font-style: normal;
  font-variant: normal;
  text-rendering: auto;
  -webkit-font-smoothing: antialiased;
  @if ($type == "free") {
    font-family: "Font Awesome 5 Free";
    font-weight: $weight;
  } @else if ($type == "brands") {
    font-family: "Font Awesome 5 Brands";
  }
}

/* Clamp Dynamic Resize
========================================================= */
@function resize($minSize, $maxSize, $minViewWidth, $maxViewWidth) {
  $slope: calc(($maxSize - $minSize) / ($maxViewWidth - $minViewWidth));
  $yAxis: calc($minSize + ($minViewWidth * $slope * -1));

  $minSizeRem: (math.div($minSize, 16)) * 1rem;
  $maxSizeRem: (math.div($maxSize, 16)) * 1rem;
  $slopeViewWidth: calc(#{$slope * 100}vw);
  $yAxisRem: (math.div($yAxis, 16)) * 1rem;
  
  @if ($yAxisRem == 0rem) {
    $preferredValue: clamp($minSizeRem, $slopeViewWidth, $maxSizeRem);
    @return $preferredValue;
  } @else {
    $preferredValue: clamp($minSizeRem, calc($yAxisRem + $slopeViewWidth), $maxSizeRem);
    @return $preferredValue;
  }
}

/* Additional Helper Mixins
========================================================= */
@mixin list-reset {
  margin: 0;
  padding: 0;
  list-style: none;
}

@mixin margin-center {
  margin-left: auto;
  margin-right: auto;
}

@mixin no-margin-last {
  &:last-of-type {
    margin-bottom: 0;
  }
}

@mixin padding-remove {
  margin-left: -#{$padding-lg};
  margin-right: -#{$padding-lg};
  @include for-size(tablet) {
    margin-left: -#{$padding-md};
    margin-right: -#{$padding-md};
  }
  @include for-size(tablet-sm) {
    margin-left: -#{$padding-sm};
    margin-right: -#{$padding-sm};
  }
}

@mixin center($dir: "vert") {
  @if ($dir == "vert") {
    top: 50%;
    transform: translateY(-50%);
  } @else if ($dir == "horiz") {
    left: 50%;
    transform: translateX(-50%);
  }
}

@mixin display($state: "show") {
  @if ($state == "show") {
    opacity: 1;
    visibility: visible;
  } @else if ($state == "hide") {
    opacity: 0;
    visibility: hidden;
  }
}

@mixin placeholder {
  &::-webkit-input-placeholder {
    @content;
  }
  &:-moz-placeholder {
    @content;
  }
  &::-moz-placeholder {
    @content;
  }
  &:-ms-input-placeholder {
    @content;
  }
  &::placeholder {
    @content;
  }
}

/* Button ( color, background, border )
========================================================= */
%btn {
  @include trans;
  border: 2px solid transparent;
  cursor: pointer;
  display: inline-block;
  padding: 10px 40px;
  text-align: center;
  user-select: none;
  vertical-align: baseline;
  font-size: rem(18);
  line-height: 1.2;
  text-decoration: none;
  -webkit-appearance: none;
}
@mixin button($color: black, $bg: white, $border: black) {
  @extend %btn;
  background-color: $bg;
  color: $color;
  border-color: $border;
  &:hover,
  &:focus {
    color: $bg;
    background-color: $color;
  }
}
